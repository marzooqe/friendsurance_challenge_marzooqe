--* Which country has the highest account balance as of today?

--Assumtion 
--Since all the currency conversion in exchange rate table is in GBP this can the base currency.
--Balance amount is calculated amount with transaction type 'in' - amount with transaction type 'out'.
--Based on this Japan is the country with highest balance (Final amount in GBP  188,767) 

SELECT 
    CS.CUSTOMER_COUNTRY,
    ROUND(SUM(CASE WHEN FT.TRANSACTION_TYPE = 'out' THEN -1 * (FT.TRANSACTION_AMOUNT * (1/ER.RATE)) ELSE FT.TRANSACTION_AMOUNT * (1/ER.RATE) END),0) AS BALANCE_AMOUNT_GBP
FROM PUBLIC.TRANSACTION_DETAIL FT
LEFT JOIN PUBLIC.CUSTOMER CS ON FT.CUSTOMER_ID = CS.CUSTOMER_ID
LEFT JOIN PUBLIC.EXCHANGE_RATE ER ON FT.TRANSACTION_CURRENCY = ER.TO_CURRENCY AND FT.TRANSACTION_DATE = ER.EFFECTIVE_DATE
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1
;


--* What is the end of the month account balance (in EUR) per country starting for the year 2022 -- Display all Months

--Assumtion 
--Month end balance = cumulative sum of inflow amount - outflow amount
--Month whan all countries have no transaction can be added in output and shown as zero using a Dim_Date table with all calendar dates

WITH BASE AS (
    SELECT     
        CS.CUSTOMER_COUNTRY AS COUNTRY, 
        FT.TRANSACTION_DATE AS DATE,
        ROUND(SUM(
            	CASE 
                	WHEN FT.TRANSACTION_TYPE = 'OUT' 
                	THEN -1 * (FT.TRANSACTION_AMOUNT * (1 / ER.RATE)) * EU.RATE 
                	ELSE FT.TRANSACTION_AMOUNT * (1 / ER.RATE) * EU.RATE 
            	END
            	), 2) AS BALANCE_AMOUNT_EUR
    FROM PUBLIC.TRANSACTION_DETAIL FT
    LEFT JOIN PUBLIC.CUSTOMER CS ON FT.CUSTOMER_ID = CS.CUSTOMER_ID
    LEFT JOIN PUBLIC.EXCHANGE_RATE ER ON FT.TRANSACTION_CURRENCY = ER.TO_CURRENCY 
    		AND FT.TRANSACTION_DATE = ER.EFFECTIVE_DATE
    LEFT JOIN PUBLIC.EXCHANGE_RATE EU ON EU.TO_CURRENCY = 'EUR' 
       		AND FT.TRANSACTION_DATE = EU.EFFECTIVE_DATE
    WHERE FT.TRANSACTION_DATE >= '2022-01-01'
    GROUP BY 1, 2
    ORDER BY 2 ASC, 1
),

CUMULATIVE_BALANCE AS (
    SELECT 
        COUNTRY,
        DATE,
        TO_CHAR(DATE, 'YY-MM') AS MONTH_YEAR,
        SUM(BALANCE_AMOUNT_EUR) OVER (PARTITION BY COUNTRY ORDER BY DATE 
            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
        	) AS CUMULATIVE_BALANCE_AMOUNT_EUR
    FROM BASE
)

SELECT DISTINCT
    COUNTRY,
    MONTH_YEAR,
    LAST_VALUE(CUMULATIVE_BALANCE_AMOUNT_EUR) OVER (
        PARTITION BY COUNTRY, MONTH_YEAR ORDER BY DATE 
        ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
    	) AS ACCOUNT_BALANCE_AMOUNT_EUR
FROM CUMULATIVE_BALANCE
ORDER BY
	COUNTRY,
    MONTH_YEAR
;


--*What is the total account balance for the last month of the data, for all countries shown in USD
WITH BASE AS (
    SELECT     
        CS.CUSTOMER_COUNTRY AS COUNTRY,
        FT.TRANSACTION_DATE AS DATE,
        ROUND(SUM(CASE 
               		WHEN FT.TRANSACTION_TYPE = 'OUT' THEN -1 * (FT.TRANSACTION_AMOUNT * (1 / ER.RATE)) * US.RATE 
                	ELSE FT.TRANSACTION_AMOUNT * (1 / ER.RATE) * US.RATE END
           		  ), 2) AS BALANCE_AMOUNT_USD
    FROM PUBLIC.TRANSACTION_DETAIL FT
    LEFT JOIN PUBLIC.CUSTOMER CS 
        ON FT.CUSTOMER_ID = CS.CUSTOMER_ID
    LEFT JOIN PUBLIC.EXCHANGE_RATE ER 
        ON FT.TRANSACTION_CURRENCY = ER.TO_CURRENCY 
        AND FT.TRANSACTION_DATE = ER.EFFECTIVE_DATE
    LEFT JOIN PUBLIC.EXCHANGE_RATE US 
        ON US.TO_CURRENCY = 'USD' 
        AND FT.TRANSACTION_DATE = US.EFFECTIVE_DATE
    GROUP BY 1, 2
    ORDER BY 2 ASC, 1
),

TEMP AS (
    SELECT 
        COUNTRY,
        DATE,
        TO_CHAR(DATE, 'YY-MM') AS MONTH_YEAR,
        SUM(BALANCE_AMOUNT_USD) OVER ( PARTITION BY COUNTRY ORDER BY DATE 
            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
        	) AS CUMULATIVE_BALANCE_AMOUNT_USD
    FROM BASE
)

SELECT DISTINCT
    COUNTRY,
    LAST_VALUE(MONTH_YEAR) OVER (PARTITION BY COUNTRY ORDER BY DATE) AS LAST_TRANSACTION_MONTH,
    LAST_VALUE(CUMULATIVE_BALANCE_AMOUNT_USD) OVER (PARTITION BY COUNTRY ORDER BY DATE) AS ACCOUNT_BALANCE_AMOUNT_USD
FROM TEMP 
ORDER BY COUNTRY;


--*Calculate the average transaction amount (in EUR) for each country and transaction type. 
--Show the country, transaction type, and average transaction amount in the result.

SELECT     
    CS.CUSTOMER_COUNTRY,
    FT.TRANSACTION_TYPE,
    ROUND(AVG(FT.TRANSACTION_AMOUNT * (1 / ER.RATE) * EU.RATE), 2) AS AVG_AMOUNT_EUR
FROM PUBLIC.TRANSACTION_DETAIL FT
LEFT JOIN PUBLIC.CUSTOMER CS 
    ON FT.CUSTOMER_ID = CS.CUSTOMER_ID
LEFT JOIN PUBLIC.EXCHANGE_RATE ER 
    ON FT.TRANSACTION_CURRENCY = ER.TO_CURRENCY 
    AND FT.TRANSACTION_DATE = ER.EFFECTIVE_DATE
LEFT JOIN PUBLIC.EXCHANGE_RATE EU 
    ON EU.TO_CURRENCY = 'EUR' 
    AND FT.TRANSACTION_DATE = EU.EFFECTIVE_DATE
GROUP BY 
	CS.CUSTOMER_COUNTRY, 
	FT.TRANSACTION_TYPE
ORDER BY 
	FT.TRANSACTION_TYPE ASC, 
	CS.CUSTOMER_COUNTRY;


